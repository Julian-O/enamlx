from enaml.core.api import Looper
from occ.shape import Face, Prism
from occ.algo import Transform, Cut, Fuse, ThruSections
from occ.draw import Segment, Wire, Point, Arc, Circle
from occ.part import Part
import math

def cosd(angle):
    #: Cos in degrees 
    return math.cos(math.radians(angle))

def sind(angle):
    #: Cos in degrees 
    return math.sin(math.radians(angle))


enamldef SawBlade(Transform): root:
    attr degrees =15
    attr radius = 2
    attr depth = 0.1
    attr thickness = 0.1
        # Notches must be cut separately
        # because they're on the outer edge
    Prism:
        vector = (0,0,thickness)
        Face:
            # Outside
            Wire:
                #Circle: c1:
                #    radius = 2
                Looper:
                    iterable << range(0,360,degrees)
                    Arc:
                        radius = root.radius
                        alpha1 = math.radians(loop_item)
                        alpha2 = math.radians(loop_item+degrees/2.0)
                    Segment:
                        #: end of last arc
                        Point:
                            position = (radius*cosd(loop_item+degrees/2.0),
                                        radius*sind(loop_item+degrees/2.0),
                                        0)
                        #: Tooth profile start
                        Point:
                            position = ((depth+radius)*cosd(loop_item+degrees/2.0),
                                        (depth+radius)*sind(loop_item+degrees/2.0),
                                        0)
                            
                        #: Tooth profile end
                        
                        #: Start of next Arc
                        Point:
                            position = (radius*cosd(loop_item+degrees),
                                        radius*sind(loop_item+degrees),
                                        0)
                        
                
            # Shaft
            Wire:
                Circle:
                    radius << root.radius*0.2
                    
enamldef CamGear(Transform): root:
    attr degrees = 5
    attr radius = 2
    attr depth = 0.1
    attr thickness = 1
    attr cam_radius = 0.2
        # Notches must be cut separately
        # because they're on the outer edge
        
    #: Gear Edge
    Fuse:
        Prism:
            vector = (0,0,thickness)
            Face:
                # Outside
                Wire:
                    #Circle: c1:
                    #    radius = 2
                    Looper:
                        iterable << range(0,360,degrees)
                        Arc:
                            radius = root.radius
                            alpha1 = math.radians(loop_item)
                            alpha2 = math.radians(loop_item+degrees/2.0)
                        Segment:
                            #: end of last arc
                            Point:
                                position = (radius*cosd(loop_item+degrees/2.0),
                                            radius*sind(loop_item+degrees/2.0),
                                            0)
                            #: Tooth profile start
                            Point:
                                position = ((depth+radius)*cosd(loop_item+5*degrees/8.0),
                                            (depth+radius)*sind(loop_item+5*degrees/8.0),
                                            0)
                        Arc:
                            radius = depth+root.radius
                            alpha1 = math.radians(loop_item+5*degrees/8.0)
                            alpha2 = math.radians(loop_item+7*degrees/8.0)
                        
                        Segment:
                            Point:
                                position = ((depth+radius)*cosd(loop_item+7*degrees/8.0),
                                            (depth+radius)*sind(loop_item+7*degrees/8.0),
                                            0)
                                
                            #: Tooth profile end
                            
                            #: Start of next Arc
                            Point:
                                position = (radius*cosd(loop_item+degrees),
                                            radius*sind(loop_item+degrees),
                                            0)
                            
                    
                # Shaft
                Wire:
                    Circle: shaft:
                        radius << (root.radius-depth-0.05)
        Prism:
            vector = (0,0,thickness/10.0)
            Face:
                Wire:
                    Circle: inner:
                        position = (0,0,thickness/2.0-thickness/10.0)
                        radius := shaft.radius
                Wire:
                    Circle:
                        position = inner.position
                        radius := cam_radius
    #             Looper:
    #                 iterable << [0, 120, 240]   
    #                 Wire:
    #                     Circle:
    #                         position = (0,0,thickness/2.0-thickness/10.0)
    #                         radius := shaft.radius/4.0 

enamldef HelicalGear(Transform): root:
    attr degrees = 15
    attr radius = 2
    attr depth = 0.3
    attr thickness = 1
    attr offset << degrees/2.0 # 
        
    #: Gear Edge
    ThruSections:
        solid = True
        # Outside
        Wire: f1:
            #Circle: c1:
            #    radius = 2
            Looper:
                iterable << range(0,360,degrees)
                Arc:
                    radius = root.radius
                    alpha1 = math.radians(loop_item)
                    alpha2 = math.radians(loop_item+degrees/2.0)
                Segment:
                    #: end of last arc
                    Point:
                        position = (radius*cosd(loop_item+degrees/2.0),
                                    radius*sind(loop_item+degrees/2.0),
                                    0)
                    #: Tooth profile start
                    Point:
                        position = ((depth+radius)*cosd(loop_item+5*degrees/8.0),
                                    (depth+radius)*sind(loop_item+5*degrees/8.0),
                                    0)
                Arc:
                    radius = depth+root.radius
                    alpha1 = math.radians(loop_item+5*degrees/8.0)
                    alpha2 = math.radians(loop_item+7*degrees/8.0)
                
                Segment:
                    Point:
                        position = ((depth+radius)*cosd(loop_item+7*degrees/8.0),
                                    (depth+radius)*sind(loop_item+7*degrees/8.0),
                                    0)
                        
                    #: Tooth profile end
                    
                    #: Start of next Arc
                    Point:
                        position = (radius*cosd(loop_item+degrees),
                                    radius*sind(loop_item+degrees),
                                    0)
        
        #: Needs more sections if thickness is big            
        Wire:
            Transform:
                Transform:
                    shape = f1
                    rotate << ((0,0,0),(0,0,1),math.radians(offset/2.0))
                translate = (0,0,thickness/2.0)
                    
        Wire:
            Transform:
                Transform:
                    shape = f1
                    rotate << ((0,0,0),(0,0,1),math.radians(offset))
                translate = (0,0,thickness)


enamldef Gears(Part): gear:
    name = "Gears"
    SawBlade:
        degrees = 10
        translate = (5,5,0)
        
    CamGear:
        translate = (5,-5,0)
    
    HelicalGear:
        pass
    

