from occ.shape import Cylinder, Prism, Face
from occ.draw import Segment, Arc, Wire, Point
from occ.algo import Fuse, ThickSolid, Fillet, Transform
from occ.part import Part
#from occ.axis import XAxis


enamldef Bottle(Part): part:
    name = "Bottle"
    
    #: "Parametric" properties of this shape
    attr height = 7.0
    attr width = 5.0
    attr thickness = 3.0
    
    #: Actual shape
    ThickSolid:
        color = '#333333'
        # Hollows out the bottle
        #closing_faces << [neck.shape_faces[0]]
        offset << thickness/50.0
        Fuse:
            # Fuse the bottle to the neck
            Cylinder: neck:
                # Bottle neck
                position << (0,0,part.height)
                direction = (0,0,1)
                radius << thickness/4.0
                height << part.height/10.0
            Fillet: bottle:
                # Bottle, with filleted edges 
                radius << thickness/12.0
                Prism:
                    # Create a solid from the bottle face
                    vector << (0,0,height)
                    Face:
                        # Create a face from the base profile
                        Wire:
                            # Create a wire from the profile and mirrored profile
                            Wire: profile:
                                Segment:
                                    Point: p1:
                                        position << (-width/2.0, 0, 0)
                                    Point: p2:
                                        position << (-width/2.0, -thickness/4.0, 0)
                                Arc:
                                    Point:
                                        position := p2.position
                                    Point: p3:
                                        position << (0, -thickness/2.0, 0) 
                                    Point:
                                        position := p5.position
                                        
                                Segment:
                                    Point: p4:
                                        position << (width/2.0, 0, 0)
                                    Point: p5:
                                        position << (width/2.0, -thickness/4.0, 0) 
                            Transform:
                                #: TODO coerce
                                mirror = ((0,0,0),(1,0,0))
                                shape = profile