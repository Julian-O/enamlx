from atom.api import (Atom, Unicode, Range, List, Bool, ForwardInstance)

from enamlx.widgets.api import (
    TreeWidget, TreeWidgetItem #TreeWidgetRow, 
)

from enaml.widgets.api import (
    Window, Container, PushButton, CheckBox, RadioButton
)
from enaml.core.looper import Looper
from enaml.widgets.spin_box import SpinBox
from atom.instance import ForwardInstance
from enamlx.widgets.tree_widget import TreeWidgetItemColumn



class Person(Atom):
    """ A simple class representing a person object.

    """
    last_name = Unicode()

    first_name = Unicode()
    
    children = List(ForwardInstance(lambda:Person))

    age = Range(low=0)

    debug = Bool(False)

class Model(Atom):
    people = List(Person)
    
    def add_person(self):
        people = self.people[:]
        person = Person(last_name='Doe',first_name='John',age=len(self.people))
        people.append(person)
        self.people = people
    
    def remove_person(self):
        people = self.people[:]
        people.pop()
        self.people = people


enamldef Main(Window):
    attr model = Model(people=[
                    Person(last_name='Jones',first_name='Bob',age=32,children=[
                        Person(last_name='Jones',first_name='Jill',age=1),
                        Person(last_name='Jones',first_name='Jack',age=3),
                        ]
                    ),
                    Person(last_name='Thompson',first_name='Walter',age=39),
                ])
    Container:
        PushButton:
            text = 'Add person'
            clicked :: model.add_person()
        PushButton:
            text = 'Remove person'
            clicked :: model.remove_person()
            
        TreeWidget:
            headers << ['#','Debug','First','Last','Age']
            Looper:
                iterable << model.people
                TreeWidgetItem: 
                    text << str(loop_index)
                    TreeWidgetItemColumn:
                        checkable = True
                        checked := loop_item.debug
                    TreeWidgetItemColumn:
                        text << loop_item.first_name
                    TreeWidgetItemColumn:
                        text << loop_item.last_name
                    
                    TreeWidgetItemColumn:
                        SpinBox:
                            value << loop_item.age
                        
                    TreeWidgetItem: # Child item
                        text << str(loop_index)
                    
                    # Going arbitrarily deep?
                    